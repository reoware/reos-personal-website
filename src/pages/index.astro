---
import Layout from "../layouts/Layout.astro";
import AnimatedScroll from "../components/AnimatedScroll";
---

<Layout title="Hello, I'm ophx!">
	<main>
		<!-- hero -->
		<AnimatedScroll client:load>
			<div class="container px-32 p-4 mx-auto flex w-full h-screen">
				<div class="my-auto w-full">
					<div class="flex items-center justify-between">
						<div class="w-[490px] max-w-[490px]">
							<p class="text-white text-5xl">Hello, I'm ophx!</p>
							<p class="text-gray-400 text-xl">A 17 year old developer from Michigan.</p>
							<div class="border-b-2 border-purple-800 w-24 mt-4 mb-4"></div>
							<p class="text-gray-400">Ever since I was 9 years old, coding has been my passion. It started with messing around jailbreaking PS3's and making MW3 cheats. From there, I fell in love with coding and never looked back. Coding isn't just a hobby for me, it's a part of who I am, driving me to constantly seek out new challenges and opportunities to expand my skills.</p>
							<div class="flex items-center gap-4 mt-4">
								<a href="https://youtube.com/@ophx1337" target="_blank" class="transition-all duriation-150 border-2 border-[#101010] bg-[#090909] hover:border-purple-800 p-4 rounded-lg shadow-lg">
									<svg xmlns="http://www.w3.org/2000/svg" viewBox="1.99 5 20.01 14.01" class="h-6 w-6 fill-white">
										<path d="M21.593 7.203a2.506 2.506 0 0 0-1.762-1.766C18.265 5.007 12 5 12 5s-6.264-.007-7.831.404a2.56 2.56 0 0 0-1.766 1.778c-.413 1.566-.417 4.814-.417 4.814s-.004 3.264.406 4.814c.23.857.905 1.534 1.763 1.765c1.582.43 7.83.437 7.83.437s6.265.007 7.831-.403a2.515 2.515 0 0 0 1.767-1.763c.414-1.565.417-4.812.417-4.812s.02-3.265-.407-4.831zM9.996 15.005l.005-6l5.207 3.005l-5.212 2.995z"></path>
									</svg>
								</a>
								<a href="https://github.com/ophx" target="_blank" class="transition-all duriation-150 border-2 border-[#101010] bg-[#090909] hover:border-purple-800 p-4 rounded-lg shadow-lg">
									<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" class="h-6 w-6 fill-white">
										<path d="M8 0c4.42 0 8 3.58 8 8a8.013 8.013 0 0 1-5.45 7.59c-.4.08-.55-.17-.55-.38 0-.27.01-1.13.01-2.2 0-.75-.25-1.23-.54-1.48 1.78-.2 3.65-.88 3.65-3.95 0-.88-.31-1.59-.82-2.15.08-.2.36-1.02-.08-2.12 0 0-.67-.22-2.2.82-.64-.18-1.32-.27-2-.27-.68 0-1.36.09-2 .27-1.53-1.03-2.2-.82-2.2-.82-.44 1.1-.16 1.92-.08 2.12-.51.56-.82 1.28-.82 2.15 0 3.06 1.86 3.75 3.64 3.95-.23.2-.44.55-.51 1.07-.46.21-1.61.55-2.33-.66-.15-.24-.6-.83-1.23-.82-.67.01-.27.38.01.53.34.19.73.9.82 1.13.16.45.68 1.31 2.69.94 0 .67.01 1.3.01 1.49 0 .21-.15.45-.55.38A7.995 7.995 0 0 1 0 8c0-4.42 3.58-8 8-8Z"></path>
									</svg>
								</a>
								<a href="https://discord.gg/3DRqNct4vM" target="_blank" class="transition-all duriation-150 border-2 border-[#101010] bg-[#090909] hover:border-purple-800 p-4 rounded-lg shadow-lg">
									<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 127.14 96.36" class="h-6 w-6 fill-white">
										<path d="M107.7,8.07A105.15,105.15,0,0,0,81.47,0a72.06,72.06,0,0,0-3.36,6.83A97.68,97.68,0,0,0,49,6.83,72.37,72.37,0,0,0,45.64,0,105.89,105.89,0,0,0,19.39,8.09C2.79,32.65-1.71,56.6.54,80.21h0A105.73,105.73,0,0,0,32.71,96.36,77.7,77.7,0,0,0,39.6,85.25a68.42,68.42,0,0,1-10.85-5.18c.91-.66,1.8-1.34,2.66-2a75.57,75.57,0,0,0,64.32,0c.87.71,1.76,1.39,2.66,2a68.68,68.68,0,0,1-10.87,5.19,77,77,0,0,0,6.89,11.1A105.25,105.25,0,0,0,126.6,80.22h0C129.24,52.84,122.09,29.11,107.7,8.07ZM42.45,65.69C36.18,65.69,31,60,31,53s5-12.74,11.43-12.74S54,46,53.89,53,48.84,65.69,42.45,65.69Zm42.24,0C78.41,65.69,73.25,60,73.25,53s5-12.74,11.44-12.74S96.23,46,96.12,53,91.08,65.69,84.69,65.69Z"/>
									</svg>
								</a>
								<a href="https://t.me/ophxthemushroom" target="_blank" class="transition-all duriation-150 border-2 border-[#101010] bg-[#090909] hover:border-purple-800 p-4 rounded-lg shadow-lg">
									<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72" class="h-6 w-6 fill-white">
										<path d="M6.792 33.254C24.916 25.366 37.03 20.107 43.135 17.57c17.28-7.231 20.848-8.452 23.195-8.452.47 0 1.69.094 2.442.751.657.47.845 1.221.845 1.69.094.47.188 1.597.094 2.442-.939 9.861-4.977 33.714-7.043 44.795-.845 4.696-2.63 6.198-4.226 6.386-3.663.376-6.386-2.348-9.86-4.695-5.447-3.569-8.546-5.823-13.9-9.297-6.103-4.039-2.159-6.292 1.316-9.955.939-.939 16.81-15.4 17.185-16.716 0-.187.094-.75-.282-1.127-.375-.375-.939-.187-1.314-.093-.564.093-9.297 5.916-26.295 17.373-2.442 1.69-4.696 2.535-6.762 2.535-2.253-.094-6.48-1.22-9.672-2.254-3.85-1.502-6.95-2.16-6.668-4.32.188-1.126 1.69-2.253 4.602-3.38z"/>
									</svg>
								</a>
							</div>
						</div>
						<div class="w-[490px] max-w-[490px]">
							<div class="border-2 border-[#101010] bg-[#090909] p-4 rounded-lg shadow-lg">
								<div class="flex items-start gap-4">
									<div>
										<div class="relative">
											<img draggable="false" id="userAvatar" src="https://cdn.discordapp.com/embed/avatars/0.png" class="rounded-full shadow-lg h-20 w-20" />
											<img draggable="false" id="userStatus" src="https://cdn.discordapp.com/emojis/1242127179655942195.webp?size=96&quality=lossless" class="absolute bottom-0 left-14 transform translate-y-1/4 w-6 h-6 border-4 border-[#090909] bg-[#090909] rounded-full" />
										</div>
									</div>
									<div>
										<p class="text-white font-medium text-2xl" id="userName">user</p>
										<div class="flex items-center bg-[#101010] rounded-lg shadow-lg px-1 py-0.5 mt-2">
											<img draggable="false" id="braveryBadge" class="h-7 w-7" style="display: none;" />
											<img draggable="false" id="brillianceBadge" class="h-7 w-7" style="display: none;" />
											<img draggable="false" id="balanceBadge" class="h-7 w-7" style="display: none;" />
											<img draggable="false" id="activeDevBadge" class="h-7 w-7" style="display: none;" />
										</div>
									</div>
								</div>
								<div class="bg-[#101010] rounded-lg shadow-lg p-4 mt-4">
									<div class="space-y-4" id="activitiesContainer"></div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</AnimatedScroll>
	</main>
</Layout>

<script is:inline>
	const userAvatar = document.querySelector("#userAvatar");
	const userStatus = document.querySelector("#userStatus");
	const userName = document.querySelector("#userName");
	const braveryBadge = document.querySelector("#braveryBadge");
	const brillianceBadge = document.querySelector("#brillianceBadge");
	const balanceBadge = document.querySelector("#balanceBadge");
	const activeDevBadge = document.querySelector("#activeDevBadge");
	const activitiesContainer = document.querySelector("#activitiesContainer");
	let statusVar;

	const setUserStatus = (status) => {
		switch (status) {
			case "dnd":
				statusVar = "1242127177147744327";
				break;
			case "offline":
				statusVar = "1242127179655942195";
				break;
			case "online":
				statusVar = "1242127175902171136";
				break;
			case "idle":
				statusVar = "1242127178309566547";
				break;
			default:
				statusVar = "1242127179655942195";
				break;
		}
	};

	const setBadges = (flags) => {
		const HYPESQUAD_ONLINE_HOUSE_1 = 64;
		const HYPESQUAD_ONLINE_HOUSE_2 = 128;
		const HYPESQUAD_ONLINE_HOUSE_3 = 256;
		const ACTIVE_DEVELOPER = 4194304;
		const badge_HYPESQUAD_ONLINE_HOUSE_1 = (flags & HYPESQUAD_ONLINE_HOUSE_1) === HYPESQUAD_ONLINE_HOUSE_1;
		const badge_HYPESQUAD_ONLINE_HOUSE_2 = (flags & HYPESQUAD_ONLINE_HOUSE_2) === HYPESQUAD_ONLINE_HOUSE_2;
		const badge_HYPESQUAD_ONLINE_HOUSE_3 = (flags & HYPESQUAD_ONLINE_HOUSE_3) === HYPESQUAD_ONLINE_HOUSE_3;
		const badge_ACTIVE_DEVELOPER = (flags & ACTIVE_DEVELOPER) === ACTIVE_DEVELOPER;

		if (badge_HYPESQUAD_ONLINE_HOUSE_1) {
			braveryBadge.src = "https://raw.githubusercontent.com/mezotv/discord-badges/1d46c1feb168386ee2771d61397cf6b1eb4dde8f/assets/hypesquadbravery.svg";
			braveryBadge.style.display = "block";
		}
		if (badge_HYPESQUAD_ONLINE_HOUSE_2) {
			brillianceBadge.src = "https://raw.githubusercontent.com/mezotv/discord-badges/1d46c1feb168386ee2771d61397cf6b1eb4dde8f/assets/hypesquadbrilliance.svg";
			brillianceBadge.style.display = "block";
		}
		if (badge_HYPESQUAD_ONLINE_HOUSE_3) {
			balanceBadge.src = "https://raw.githubusercontent.com/mezotv/discord-badges/1d46c1feb168386ee2771d61397cf6b1eb4dde8f/assets/hypesquadbalance.svg";
			balanceBadge.style.display = "block";
		}
		if (badge_ACTIVE_DEVELOPER) {
			activeDevBadge.src = "https://raw.githubusercontent.com/mezotv/discord-badges/1d46c1feb168386ee2771d61397cf6b1eb4dde8f/assets/activedeveloper.svg";
			activeDevBadge.style.display = "block";
		}
	};

	const fetchData = async () => {
		const response = await fetch("https://api.lanyard.rest/v1/users/459738097622712320");
		const data = await response.json();
		const spotify = data.data.spotify;
		const status = data.data.discord_status;

		setUserStatus(status);
		userStatus.src = `https://cdn.discordapp.com/emojis/${statusVar}.webp?size=96&quality=lossless`;

		let activities = data.data.activities;
		activities = activities.filter((activity) => activity.name !== "Spotify");
		const customActivities = activities.map((activity) => {
			const currentTime = Date.now();
			const elapsedTimeMs = currentTime - activity.timestamps.start;
			const seconds = Math.floor(elapsedTimeMs / 1000) % 60;
			const minutes = Math.floor(elapsedTimeMs / (1000 * 60)) % 60;
			const hours = Math.floor(elapsedTimeMs / (1000 * 60 * 60)) % 24;
			const formattedElapsedTime = `${hours.toString().padStart(2, "0")}:${minutes.toString().padStart(2, "0")}:${seconds.toString().padStart(2, "0")}`;

			const baseUrlLarge = activity.assets.large_image.split("/");
			const indexLarge = baseUrlLarge.findIndex((part) => part.startsWith("https"));
			const formattedImageUrlLarge = "https://" + baseUrlLarge.slice(indexLarge + 1).join("/");

			if (activity.assets.small_image) {
				var baseUrlSmall = activity.assets.small_image.split("/");
				var indexSmall = baseUrlSmall.findIndex((part) => part.startsWith("https"));
				var formattedImageUrlSmall = "https://" + baseUrlSmall.slice(indexSmall + 1).join("/");
			}
			
			return {
				...activity,
				formattedElapsedTime: formattedElapsedTime,
				formattedImageUrlLarge: formattedImageUrlLarge,
				formattedImageUrlSmall: formattedImageUrlSmall,
			};
		});

		const formatTime = (seconds) => {
			const minutes = Math.floor(seconds / 60);
			const remainingSeconds = Math.floor(seconds % 60);
			return `${minutes}:${remainingSeconds < 10 ? "0" : ""}${remainingSeconds}`;
		};
		
		activitiesContainer.innerHTML = "";
		if (customActivities.length === 0 && !spotify) {
			activitiesContainer.innerHTML = `<p class="text-gray-400 text-sm">Not Playing Anything...</p>`;
		}
		customActivities.forEach((activity, index) => {
			const code = `
				<div>
					<p class="text-white text-sm font-medium mb-1 uppercase">Playing A Game</p>
					<div class="flex items-start gap-4">
						<div>
							<div class="relative">
								<img draggable="false" src="${activity.formattedImageUrlLarge}" class="rounded-lg shadow-lg h-16 w-16" />
								${activity.assets.small_image ? `<img draggable="false" src="${activity.formattedImageUrlSmall}" class="absolute bottom-0 left-11 transform translate-y-1/4 w-8 h-8 border-4 border-[#101010] bg-[#101010] rounded-full" />` : ""}
							</div>
						</div>
						<div>
							<p class="text-white font-medium">${activity.name ? activity.name : ""}</p>
							<p class="text-gray-400 text-sm">${activity.state ? activity.state : ""}</p>
							<p class="text-gray-400 text-sm">${activity.details ? activity.details : ""}</p>
							${activity.timestamps.hasOwnProperty("start") ? `<p class="text-gray-400 text-sm">${activity.formattedElapsedTime} elapsed</p>` : ""}
						</div>
					</div>
				</div>
			`;
			const existingDiv = document.querySelector(`#activity-${index}`);
			if (existingDiv) {
				existingDiv.innerHTML = `${code}`;
			} else {
				const el = document.createElement("div");
				el.id = `activity-${index}`;
				el.innerHTML = `${code}`;
				activitiesContainer.append(el);
			}
		});
		if (spotify) {
			const code = `
				<div>
					<p class="text-white text-sm font-medium mb-1 uppercase">Listening To Spotify</p>
					<div class="flex items-start gap-4">
						<div>
							<img draggable="false" src="${spotify.album_art_url}" class="rounded-lg shadow-lg h-16 w-16" />
						</div>
						<div>
							<a href="https://open.spotify.com/track/${spotify.track_id}" target="_blank" class="text-white font-medium hover:underline">${spotify.song}</a>
							<p class="text-gray-400 text-sm">By ${spotify.artist}</p>
							<p class="text-gray-400 text-sm">On ${spotify.album}</p>
						</div>
					</div>
					<div class="relative w-full h-1 bg-[#303030] rounded-full mt-2">
						<div class="absolute top-0 left-0 h-full bg-green-500 rounded-full" style="width: ${((Date.now() - spotify.timestamps.start) / (spotify.timestamps.end - spotify.timestamps.start)) * 100}%"></div>
					</div>
					<div class="flex items-center justify-between">
						<p class="text-white text-sm">${formatTime((Date.now() - spotify.timestamps.start) / 1000)}</p>
						<p class="text-white text-sm">${formatTime((spotify.timestamps.end - spotify.timestamps.start) / 1000)}</p>
					</div>
				</div>
			`;
			const existingSpotifyDiv = document.querySelector("#spotifyActivity");
			if (existingSpotifyDiv) {
				existingSpotifyDiv.innerHTML = `${code}`;
			} else {
				const el = document.createElement("div");
				el.id = "spotifyActivity";
				el.innerHTML = `${code}`;
				activitiesContainer.appendChild(el);
			}
		}
	};
	fetchData();
	setInterval(() => {
		fetchData();
	}, 1000);

	const fetchUser = async () => {
		const response = await fetch("https://api.lanyard.rest/v1/users/459738097622712320");
		const data = await response.json();
		const user = data.data.discord_user;

		userAvatar.src = `https://cdn.discordapp.com/avatars/${user.id}/${user.avatar}.png?size=4096`;
		userName.innerHTML = `${user.username}`;

		setBadges(user.public_flags);
	};
	fetchUser();
</script>